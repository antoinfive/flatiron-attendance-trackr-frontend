"use strict";

Object.defineProperty(exports, "__esModule", {
                            value: true
});

var _promise = require("babel-runtime/core-js/promise");

var _promise2 = _interopRequireDefault(_promise);

exports.default = printHelp;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @author Toru Nagashima
 * @copyright 2015 Toru Nagashima. All rights reserved.
 * See LICENSE file in root directory for full license.
 */

/**
 * Print a help text.
 *
 * @param {stream.Writable} output - A writable stream to print.
 * @returns {Promise} Always a fulfilled promise.
 * @private
 */
function printHelp(output) {
                            output.write("\nUsage: npm-run-all [...tasks] [OPTIONS]\n\n  Run specified tasks.\n\n  Options:\n    -h, --help                  Print this text.\n    -v, --version               Print version number.\n\n    -c, --continue-on-error     Set the flag to ignore errors to the current\n                                group of tasks.\n    -l, --print-label           Set the flag to print the task name as a prefix\n                                on each line of output, to the current group of\n                                tasks.\n    -n, --print-name            Set the flag to print the task name before\n                                running each task, to the current group of\n                                tasks.\n    --silent                    Set \"silent\" to the log level of npm.\n\n    -p, --parallel [...tasks]   Run a group of tasks in parallel.\n                                e.g. 'npm-run-all -p foo bar' is similar to\n                                     'npm run foo & npm run bar'.\n    -P [...tasks]               Run a group of tasks in parallel as ignoring\n                                errors. This is shorthand of '-p -c [...tasks]'.\n\n    -s, --sequential [...tasks] Run a group of tasks in sequential.\n        --serial [...tasks]     '--serial' is a synonym of '--sequential'.\n                                e.g. 'npm-run-all -s foo bar' is similar to\n                                     'npm run foo && npm run bar'.\n    -S [...tasks]               Run a group of tasks in sequential as ignoring\n                                errors. This is shorthand of '-s -c [...tasks]'.\n\n  See Also:\n    https://github.com/mysticatea/npm-run-all#readme\n");

                            return _promise2.default.resolve(null);
}